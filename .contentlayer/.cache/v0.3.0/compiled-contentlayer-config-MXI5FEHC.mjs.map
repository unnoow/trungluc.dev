{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport readingTime from \"reading-time\";\nimport codeTitle from \"rehype-code-titles\";\nimport highlight from \"rehype-prism-plus\";\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n  readingTime: { type: \"json\", resolve: (doc) => readingTime(doc.body.raw) },\n  wordCount: {\n    type: \"number\",\n    resolve: (doc) => doc.body.raw.split(/\\s+/gu).length,\n  },\n  slug: {\n    type: \"string\",\n    resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"),\n  },\n};\n\nconst Writings = defineDocumentType(() => ({\n  name: \"Writing\",\n  filePathPattern: \"writings/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    publishedAt: { type: \"string\", required: true },\n    description: { type: \"string\" },\n    tags: { type: \"list\", of: { type: \"string\" }, required: true },\n    thumbnail: { type: \"string\" },\n  },\n  computedFields,\n}));\n\nconst DailyLesson = defineDocumentType(() => ({\n  name: \"DailyLesson\",\n  filePathPattern: \"daily-lessons/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    publishedAt: { type: \"string\", required: true },\n    description: { type: \"string\" },\n    tags: { type: \"list\", of: { type: \"string\" }, required: true },\n    thumbnail: { type: \"string\" },\n  },\n  computedFields,\n}));\n\nconst contentLayerConfig = makeSource({\n  contentDirPath: \"contents\",\n  documentTypes: [Writings, DailyLesson],\n\n  mdx: {\n    remarkPlugins: [],\n    rehypePlugins: [codeTitle, highlight],\n  },\n});\n\nexport default contentLayerConfig;\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,iBAAiB;AACxB,OAAO,eAAe;AACtB,OAAO,eAAe;AAGtB,IAAM,iBAAiB;AAAA,EACrB,aAAa,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG,EAAE;AAAA,EACzE,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,EAChD;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,EAChE;AACF;AAEA,IAAM,WAAW,mBAAmB,OAAO;AAAA,EACzC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,aAAa,EAAE,MAAM,SAAS;AAAA,IAC9B,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,IAC7D,WAAW,EAAE,MAAM,SAAS;AAAA,EAC9B;AAAA,EACA;AACF,EAAE;AAEF,IAAM,cAAc,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,aAAa,EAAE,MAAM,SAAS;AAAA,IAC9B,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,KAAK;AAAA,IAC7D,WAAW,EAAE,MAAM,SAAS;AAAA,EAC9B;AAAA,EACA;AACF,EAAE;AAEF,IAAM,qBAAqB,WAAW;AAAA,EACpC,gBAAgB;AAAA,EAChB,eAAe,CAAC,UAAU,WAAW;AAAA,EAErC,KAAK;AAAA,IACH,eAAe,CAAC;AAAA,IAChB,eAAe,CAAC,WAAW,SAAS;AAAA,EACtC;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
